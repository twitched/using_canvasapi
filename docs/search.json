[
  {
    "objectID": "using_canvasapi.html",
    "href": "using_canvasapi.html",
    "title": "Using the Canvas API",
    "section": "",
    "text": "One important feature of Canvas is its API. In fact, the Canvas LMS as we use it is built on its API. Everything a user does in either Canvas‚Äô web interface or the mobile apps goes through the API. This architecture allows every user to use the API to do anything they could do in the browser or mobile app plus more in a program.\nThis guide shows how to use Python and a library created by the University of Central Florida to create scripts that use the API."
  },
  {
    "objectID": "using_canvasapi.html#getting-started",
    "href": "using_canvasapi.html#getting-started",
    "title": "Using the Canvas API",
    "section": "2 Getting Started",
    "text": "2 Getting Started\n\n2.1 Getting an Access Token\nTo get direct access to the API you need an access token that acts like a password. You can get the key from your user. As shown below, go to your users settings and click on New Access Token.\n\n\n\nGetting an access token\n\n\nThe Purpose field can have anything you want, but it is good to choose something that will help you remember why you created it. If you are doing this for learning, I suggest ‚ÄúLearning the Canvas API‚Äù.\nExpiration: You should have your token expire in case you don‚Äôt use it again. If you are doing this for learning, have the token expire soon. You can create another at anytime. You can create more than one at a time if you want.\n\n\n\n\n\n\nWarning\n\n\n\nThis access token is just as good as your username and password. Plus, it doesn‚Äôt require Duo! Treat it with extreme caution. Anyone with it can log into Canvas as you.\n\n\nCopy the token to a safe place like a password manager or a temporary document on your desktop so that you can delete it later. As the dialog says, it will only show it one time. If you close the dialog before copying the token or copy it incorrectly. Delete that token (üóë) and create another.\n\n\n2.2 Install Python\nIf you already have Python 3.9 or greater installed, and you can run python from the command line, you can skip this section.\n\n\n\n\n\n\nNote\n\n\n\nThese instructions are for Windows. If you are using MacOS or Linux, I suggest using your favorite package manager (like brew for MacOS) to install Python.\n\n\nIf not, do the following:\n\nGo to https://python.org, go to Downloads and choose to download the Latest Python 3 Release. At the time of this writing, the latest is 3.10.8. It might be higher now.\nDouble click on the installer file to start the install\nCheck the box that says Add python.exe to PATH\nChoose Install Now to complete the rest of the install\n\nCheck to see if it worked by\n\nRight-clicking on the start menu button and choosing Windows PowerShell\nAt the prompt type python --version and press enter\n\nIt should show the version of python. This shows that you installed correctly. If it doesn‚Äôt work, uninstall python and reinstall it making sure you follow the instructions above.\n\n\n\n\n\n\nNote\n\n\n\nSince we will be doing a lot on the command line I suggest installing and using the Windows Terminal. It does a lot of things better than the standard command line through Powershell or cmd.\n\n\n\n\n2.3 Install Needed Packages\nNow that Python is installed and we can run it from the command line, we are ready to install the Python packages we need to use the Canvas API.\n\nOpen the command line (either Windows Terminal, if you installed it, or Windows PowerShell)\nEnter the following:\n\npip install canvasapi keyring\n\n\n2.4 Store your API token securely\nWe can use the keyring package we just installed to store your Canvas API token securely and where we can retrieve it later:\nkeyring set canvas token"
  }
]